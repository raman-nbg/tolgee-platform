buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {}
}

plugins {
    id 'io.spring.dependency-management'
    id 'org.jetbrains.kotlin.jvm'
    id 'org.liquibase.gradle'
    id 'org.springframework.boot'
    id "java"
    id "kotlin-allopen"
    id "org.hibernate.orm"
}

apply plugin: "kotlin-allopen"
apply plugin: "org.jetbrains.kotlin.plugin.spring"
apply plugin: 'org.hibernate.orm'

allOpen {
    annotation("jakarta.persistence.Entity")
    annotation("jakarta.persistence.MappedSuperclass")
    annotation("jakarta.persistence.Embeddable")
    annotation("org.springframework.stereotype.Service")
    annotation("org.springframework.stereotype.Component")
    annotation("org.springframework.transaction.annotation.Transactional")
    annotation("org.springframework.beans.factory.annotation.Configurable")
    annotation("org.springframework.boot.test.context.SpringBootTest")
}

repositories {
    mavenCentral()
}

test {
    useJUnitPlatform()
    maxHeapSize = "2048m"
}

apply from: "$rootDir/gradle/liquibase.gradle"
configureLiquibase("ee", "hibernate:spring:io.tolgee.ee.model", 'src/main/resources/db/changelog/ee-schema.xml')

diff.dependsOn compileKotlin
diffChangeLog.dependsOn compileKotlin

dependencies {
    implementation("org.springframework.boot:spring-boot-starter")
    implementation("org.springframework.boot:spring-boot-starter-web")
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation(project(":data"))
    implementation(project(":security"))
    implementation "org.springframework.boot:spring-boot-starter-hateoas"
    implementation "org.springframework.boot:spring-boot-starter-batch"

    /**
     * SPRING DOC
     */
    implementation libs.springDocWebmvcApi
    implementation libs.springDocOpenApiUi
    implementation libs.springDocOpenApiCommon


    /**
     * MISC
     */
    implementation libs.hibernateTypes
    implementation libs.jacksonKotlin

    /**
     * Liquibase
     */
    implementation libs.liquibaseCore
    liquibaseRuntime libs.liquibaseCore
    liquibaseRuntime 'org.postgresql:postgresql'
    liquibaseRuntime('org.liquibase:liquibase-groovy-dsl:3.0.2')
    liquibaseRuntime libs.liquibaseHibernate
    liquibaseRuntime libs.kotlinReflect
    liquibaseRuntime(project(":data"))

    liquibaseRuntime sourceSets.main.output
    liquibaseRuntime 'org.springframework.boot:spring-boot-starter-data-jpa'
}

kotlin {
    jvmToolchain(17)
}

hibernate {
    enhancement {
        lazyInitialization = true
        dirtyTracking = true
    }
}

tasks.findByName("jar").enabled(true)
tasks.findByName("bootJar").enabled(false)

jar {
    duplicatesStrategy(DuplicatesStrategy.EXCLUDE)
}
